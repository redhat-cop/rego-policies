name: Run gatekeeper-k8s-integrationtests.sh

on: [push, pull_request]

# Declare default permissions as read only.
permissions: read-all

jobs:
  kind:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Find test data to validate
        shell: bash
        id: data
        run: |
          echo "files=$(find policy/* -regex '.*test_data\/integration\/.*$' | xargs)" >> "$GITHUB_OUTPUT"

      - name: Validate integration test data via kubeconform
        uses: docker://ghcr.io/yannh/kubeconform:v0.6.6@sha256:e4c69e6966a4842196ad3babc6f4c869d4ee51dc306fcf012faf10b25bb63a9c
        with:
          args: -summary -schema-location "https://raw.githubusercontent.com/garethahealy/openshift-json-schema/main/4.13/schemas/{{ .ResourceKind }}{{ .KindSuffix }}.json" ${{ steps.data.outputs.files }}

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@0025e74a8c7512023d06dc019c617aa3cf561fde # v1.10.0

      - name: Setup confbatstest
        uses: redhat-cop/github-actions/confbatstest@e4729075dcd3f34946b80df6b1bfb952b9fee166 # v4
        with:
          raw: echo "Needed for next stage"

      - name: Test against KinD
        run: |
          confbatstest=$(docker images --filter=label=com.github.actions.name=confbatstest --format "{{.Repository}}:{{.Tag}}")
          docker run --rm --network host --workdir /conftest --volume "/home/runner/.kube/":"/opt/app-root/src/.kube/" --volume "/home/runner/work/rego-policies/rego-policies":"/conftest" --entrypoint .github/workflows/tests-entrypoint.sh ${confbatstest}

      - name: Get pods and events if tests failed
        if: ${{ failure() }}
        run: |
          echo "## nodes:"
          kubectl get nodes

          echo "## namespaces:"
          kubectl get namespaces

          echo "## deployments:"
          kubectl get deployments --all-namespaces

          echo "## pods:"
          kubectl get pods --all-namespaces

          echo "## events:"
          kubectl get events --all-namespaces

          echo "## api-versions:"
          kubectl api-versions
          
          echo "## describe deployment/gatekeeper-audit:"
          kubectl describe deployment/gatekeeper-audit -n gatekeeper-system
          
          echo "## logs deployment/gatekeeper-audit:"
          kubectl logs deployment/gatekeeper-audit -n gatekeeper-system
          
          echo "## describe deployment/gatekeeper-controller-manager:"
          kubectl describe deployment/gatekeeper-controller-manager -n gatekeeper-system
          
          echo "## logs deployment/gatekeeper-controller-manager:"
          kubectl logs deployment/gatekeeper-controller-manager -n gatekeeper-system
